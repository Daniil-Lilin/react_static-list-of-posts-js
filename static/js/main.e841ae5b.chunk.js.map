{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","id","CommentList","comments","length","map","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IACtC,OACD,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAGL,mBAAGE,UAAU,oBAAb,SAAkCD,MAXHH,EAAQM,KCHhCC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAChB,oBAAIL,UAAU,cAAd,SACGI,EAASE,KAAI,SAAAV,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQM,SAIhD,mBAAG,UAAQ,oBAAX,+BCXSK,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,IAAKA,EACH,OAAO,KAGT,IAAQX,EAAgBW,EAAhBX,KAAMC,EAAUU,EAAVV,MAEd,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,KCLMY,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOZ,EAAyBW,EAAzBX,KAAMS,EAAmBE,EAAnBF,KAAMJ,EAAaM,EAAbN,SAE3B,OACE,qBAAIJ,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAEAD,EAAKF,MAAQ,cAAC,EAAD,CAAUA,KAAMA,UAIlC,mBAAGR,UAAU,iBAAb,SAA+BD,IAE/B,uBAEA,cAAC,EAAD,CAAaK,SAAUA,MAfKM,EAAKR,MCN1BU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIb,UAAU,WAAd,SACGa,EAAMP,KAAI,SAAAI,GAAI,OAAK,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKR,UCWjD,IAAMW,EAAQC,EAAgBR,KAAI,SAAAI,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBO,EAUDL,EAAKK,OAThBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKN,KAAOa,GAAU,SAU1DX,UAP2Bc,EAOGR,EAAKR,GAN5BiB,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAA6BA,EAJRH,KAcRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCpBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e841ae5b.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <li className=\"CommentInfo\" key={comment.id}>\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n        {' by '}\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n      <p className=\"CommentInfo__body\">{body}</p>\n    </li>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0 ? (\n    <ul className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n    </ul>\n  ) : (\n    <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n  )\n);\n","export const UserInfo = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <li className=\"PostInfo\" key={post.id}>\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          {post.user && <UserInfo user={user} />}\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">{body}</p>\n\n      <hr />\n\n      <CommentList comments={comments} />\n    </li>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (<PostInfo post={post} key={post.id} />))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId || null);\n}\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}