{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","id","CommentList","comments","length","map","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAC9C,OACD,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAGb,mBAAGH,UAAU,oBAAb,SAAkCD,EAAQK,SAXXL,EAAQM,KCA9BC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAChB,oBAAIR,UAAU,cAAd,SACGO,EAASE,KAAI,SAAAV,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQM,SAIhD,mBAAG,UAAQ,oBAAX,+BCXSK,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OAAKA,EAKH,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,OALD,MCEEW,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qBAAIb,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,EAAKC,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAIzB,mBAAGX,UAAU,iBAAb,SAA+Ba,EAAKT,OAEpC,uBAEA,cAAC,EAAD,CAAaG,SAAUM,EAAKN,aAfAM,EAAKR,MCHxBU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIhB,UAAU,WAAd,SACGgB,EAAMP,KAAI,SAAAI,GAAI,OAAK,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKR,UCWjD,IAAMW,EAAQC,EAAgBR,KAAI,SAAAI,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBO,EAUDL,EAAKK,OAThBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKN,KAAOa,GAAU,SAU1DX,UAP2Bc,EAOGR,EAAKR,GAN5BiB,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAA6BA,EAJRH,KAcRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QCpBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.12b1a497.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => (\n  <li className=\"CommentInfo\" key={comment.id}>\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n      {' by '}\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n    <p className=\"CommentInfo__body\">{comment.body}</p>\n  </li>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0 ? (\n    <ul className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n    </ul>\n  ) : (\n    <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n  )\n);\n","export const UserInfo = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <li className=\"PostInfo\" key={post.id}>\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{post.body}</p>\n\n    <hr />\n\n    <CommentList comments={post.comments} />\n  </li>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (<PostInfo post={post} key={post.id} />))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId || null);\n}\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}